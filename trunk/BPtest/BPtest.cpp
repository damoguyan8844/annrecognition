#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <ctime> 
#include <cstdlib>
#include <math.h>
#include <conio.h>

using namespace std;

#define INPUTDEM      64
#define IMPLICITDEM   8
#define OUTPUTDEM     4 

#ifdef  WIN32
#define TEST_FILE   "C:\\BP\\testData.txt"  
#else
#define TEST_FILE   "bp/testData.txt"  
#endif

ifstream fi;
double  data[INPUTDEM+1];
bool test()
{
	 double  W1[IMPLICITDEM][INPUTDEM]={
 {0.022109,-8.216887,2.712270,-1.160655,-3.395344,-4.715001,-3.707127,6.543333,-5.284111,-6.485707,-4.387851,-4.384464,-1.072684,-0.408010,4.392716,-1.399756,-0.004212,4.631551,0.825036,7.669602,8.006866,3.081568,1.283873,-0.142966,0.059880,2.117737,0.081294,1.361322,-0.882982,0.233990,2.463687,0.210507,0.082189,3.103296,0.742489,-5.097394,-2.983358,-1.690714,5.919548,0.012661,0.394135,-1.906931,-0.639136,3.625964,1.306993,-0.378432,-2.043299,-0.124196,-0.111005,0.290979,3.170216,-2.257470,3.790732,-0.866326,-3.769356,4.811150,0.023840,-3.424180,-4.952244,1.538140,0.776544,1.037034,-2.341424,1.974328},
 {0.077970,1.342885,5.475652,-1.479602,5.122678,3.609243,0.302790,5.756831,9.796285,0.280585,-1.361246,1.745304,-2.895785,1.089890,0.540295,1.791841,-0.169048,0.907504,4.679359,-3.982184,-5.482986,-7.641295,-3.616727,-0.865816,-1.272815,4.850795,-3.644970,4.043093,-1.697120,4.095785,8.811803,0.120877,0.024821,-0.646206,3.198514,0.177224,0.066880,-0.329664,-0.501385,0.062265,0.254478,2.451548,-0.336227,-0.981547,2.917714,3.365815,0.483352,0.429769,0.090871,4.014493,2.385394,-0.176386,-3.275164,-2.268993,3.820852,-2.615502,0.065180,-1.001031,-2.139933,-3.295917,-1.341820,-2.701478,-1.539082,-1.945828},
 {-0.076938,-5.597637,3.338125,-4.081684,3.644602,1.524879,4.506598,-0.804164,-0.422134,3.677651,-9.213082,1.374765,-0.285598,-0.909436,-1.805730,0.135951,-0.089338,-5.857498,1.517237,5.109481,-0.920682,-11.694491,-12.021437,-1.689072,0.221888,0.609550,8.605804,-0.082035,-3.124681,4.073697,-2.736774,0.023484,0.029057,5.852120,-2.439688,5.224388,4.558568,6.171263,8.673248,0.032315,0.068221,2.826304,-6.170214,7.319216,4.471338,-0.497713,7.917813,1.214910,0.091422,-1.199321,-3.355463,-1.982276,0.074380,-2.314372,-0.726361,0.517219,0.004243,-5.978974,3.328239,-3.797350,-4.777260,0.861350,-3.440518,0.228503},
 {0.194436,-1.322984,-2.228480,1.470245,-5.497633,-6.597873,-8.365143,-6.345421,3.128931,0.605234,1.352908,-7.387234,-1.293470,2.602348,1.891288,-4.145931,-0.238322,-3.525567,3.313451,5.628452,8.864512,9.934738,3.346490,-1.481669,-0.033689,7.172931,6.554510,-0.466123,-1.725700,-0.684150,22.209358,0.038599,0.039934,-3.577978,-3.460324,2.391988,1.034534,4.468011,-2.377507,0.023637,0.362932,7.710479,3.807380,0.103359,3.290158,-1.269982,1.495434,-1.520648,-0.192277,-4.298786,0.668630,-4.099661,-2.306906,-1.932960,-0.331104,-5.735518,-0.053683,-1.974418,-5.847180,-6.738689,-1.907482,-3.059204,-3.714924,-1.699046},
 {-0.014553,4.325756,1.807822,0.629118,3.188450,1.440154,3.094311,4.333190,0.052833,-1.170928,3.106143,0.070957,3.291107,6.945776,-4.886288,2.064702,-0.067542,2.179740,-5.513356,-8.094960,2.135370,-2.787636,4.365716,-2.529609,0.087219,-2.407483,-3.624321,2.137079,4.033523,0.546253,2.548058,0.063257,0.072023,-1.086568,-2.532065,1.356238,-0.053229,2.717400,6.714246,0.120899,0.086044,2.814076,-6.939275,-7.822231,5.018777,3.548326,2.511296,0.797259,0.026627,-1.056080,0.281657,-0.177033,-10.797182,-1.229925,-2.305488,-2.216233,0.125515,3.893255,-0.678206,0.467693,-4.607160,-6.024005,-1.547502,-5.089474},
 {0.093952,-5.104269,-5.994733,4.752966,1.664821,3.000673,-1.300438,-0.722883,0.117156,1.417915,-2.668080,-7.005743,3.188711,4.310849,2.731781,4.133313,0.076856,4.488784,4.467235,7.526769,3.041062,0.344602,1.126874,0.798039,0.054101,0.468255,4.391188,-1.874631,-0.191415,3.333692,-8.224235,-0.266348,0.095644,-6.740973,-2.585962,6.180160,-8.405491,-6.932577,-5.914226,0.014080,0.069682,-4.580204,-2.592138,-5.970576,-3.445675,0.620305,0.230356,-0.753253,0.030132,5.775318,1.904031,-1.755694,7.524688,8.121083,0.529698,-1.851216,0.073728,-1.413010,1.608395,8.983099,2.200276,-1.118614,8.377199,-0.042460},
 {0.040198,0.686204,-1.064302,-0.246539,-1.883201,-6.840810,2.192674,0.789635,0.065701,-0.577530,1.227089,2.066305,-1.096186,-0.619983,-0.360344,0.998891,-0.051827,-4.446936,2.210492,-5.315255,-3.635338,-2.394542,-0.414549,0.002972,0.103717,2.410114,-1.039062,-6.555277,-4.117758,-1.906079,0.090773,-0.001363,0.023007,-1.174987,-2.531387,-8.266121,-1.624356,1.297075,-3.480462,0.031957,-0.021694,-3.034131,12.237043,1.206892,-5.527160,-2.227323,0.470969,0.566495,0.230444,-2.932783,-1.059524,6.173427,10.271635,6.052050,1.995504,0.024691,0.175500,2.529683,-1.032730,-5.632645,0.412520,4.356388,1.400823,-2.691391},
 {-0.095155,2.187361,-1.695949,-3.220567,-0.928023,-2.628816,-4.765028,1.708292,0.079796,-0.703641,-1.964302,-3.136552,-2.354052,0.580079,2.185446,-0.699053,0.368691,-0.314999,-2.942198,-1.610938,0.561064,0.766702,2.719633,-1.817868,0.720236,3.750152,-1.793992,1.638024,2.724803,-4.404736,3.303147,0.144906,0.076067,-3.272528,-2.587361,1.478749,2.126663,2.804792,4.030684,0.034433,0.116272,6.448976,9.681078,5.155818,6.239046,0.157220,-0.372633,-1.847718,0.027672,0.783250,0.388897,2.468203,-0.417911,2.777082,0.261747,-1.597932,0.042303,1.819674,3.910829,-2.534580,1.975498,0.717335,0.076541,12.577500}

};
     double  B1[IMPLICITDEM]=
{-2.317731,1.362450,1.364948,2.473935,-2.863219,-9.304658,2.621493,-0.415685}
;
     double  A1[IMPLICITDEM];

     double  W2[OUTPUTDEM][IMPLICITDEM]={
 {7.431052,-8.193581,10.865128,-9.166669,32.552227,9.426510,-18.157473,-22.627081},
 {-17.860737,-13.848167,2.547022,-17.876204,19.579830,-13.404338,20.635199,17.981291},
 {9.891647,19.889011,15.597469,-13.789854,0.585529,-30.245293,6.286276,-3.187049},
 {-12.277892,5.901772,-15.400503,22.338346,-8.230428,21.623737,-32.400810,-6.068471}

};
     double  B2[OUTPUTDEM]=
{9.944443,1.048959,3.797251,-18.637012}
;
     double  A2[OUTPUTDEM];
	 //第一层的输出a1=logsign(W1*a0+B1) 
	 for(int i=0;i<IMPLICITDEM;i++)
	 {    
          int num=0;
		  A1[i]=0;
		  while(num<INPUTDEM)   
		  {
			  A1[i]+=W1[i][num]*data[num];
			  num++;
		  }
          A1[i]+=B1[i];
		  A1[i]=1/(1+exp(-A1[i]));
	 }
	 //第二层的输出a2=logsign(W2*a1+B2)
     for(   i=0;i<OUTPUTDEM;i++)
	 {    
          int num=0;
		  A2[i]=0;
		  while(num<IMPLICITDEM)   
		  {
			  A2[i]+=W2[i][num]*A1[num];
			  num++;
		  }
          A2[i]+=B2[i];
		  A2[i]=1/(1+exp(-A2[i]));
	}

	int out=0;
	for( i=0;i<OUTPUTDEM;i++)
	{        
		  if(A2[OUTPUTDEM-1-i]>0.5) out=out*2+1;
		  else    out*=2;
    }
	if(out==(int)data[INPUTDEM])	return true;	
	return false;
}
void main()
{
	char datr[200];
	int check=0;
	int total=0;
	cout<<TEST_FILE<<endl;
	fi.open(TEST_FILE,ios::in);
	if(!fi)
	{
		 cout<<"File ont find"<<endl;
		 return;
	}
	while(fi.getline(datr,200))    /*读取训练样本*/
	{   
		 int begin=0;
		 int point=0;
		 int temp=0;
		 int i=0;
		 do{
			 if(datr[i]==','||datr[i]=='\0')
			 {
				data[point]=datr[i-1]-'0';
				if(begin==i-2)
					data[point]+=10*(datr[i-2]-'0');
				data[point]=data[point]/16;   //为使计算机结果保持在一定范围内对数据进行改动,0 1 化.
				point++;
				begin=i+1;	     
			 }
			 i++;
		 }while(i<200&&datr[i-1]!='\0');
		data[point-1]=data[point-1]*16;
		if(test())  check++;
		total++;
	}
	fi.close();
	cout<<check*100.0/total<<"%"<<endl;
}